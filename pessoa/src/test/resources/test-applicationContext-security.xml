<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:http pattern="/**" use-expressions="true" once-per-request="true" create-session="never"
                   disable-url-rewriting="true" authentication-manager-ref="authenticationManager">
        <security:anonymous enabled="false"/>
        <security:session-management session-fixation-protection="none"/>
        <security:intercept-url pattern="/**/*.svc"
                                access="isFullyAuthenticated()"/>

        <security:http-basic/>
    </security:http>

    <security:authentication-manager alias="authenticationManager" erase-credentials="true">
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="SELECT email 'username' , password , 1 'enabled' , CASE bloqueado WHEN 0 THEN 1 ELSE 0 END 'accountNonLocked' FROM usuario WHERE email = ?"
                                        authorities-by-username-query="SELECT email 'username' , 'USUARIO' AS 'rolename' FROM usuario WHERE email = ?"/>
            <security:password-encoder hash="md5"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>